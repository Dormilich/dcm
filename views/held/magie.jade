//- function definitions

-	function contains(__array, __string) {
-		if (typeof __array === "string") {
-			return __array.indexOf(__string) > -1;
-		}
-		if (Array.isArray(__array)) {
-			return __array.filter(function(item) {
-				return item.indexOf(__string) > -1;
-			}).length > 0;
-		}
-		return false;
-	}
- 
- 	function getTalent(__list, __waffe) { 
- 		var l = __list ? __list.length : 0; 
- 		while (l--) { 
- 			if (__list[l].name === __waffe.talent) {
- 				return __list[l];
- 			}
- 		} 
- 		return { wert: 0, AT: 0, PA: 0 }; 
-	}
- 
-	function beautifyNumber(num) {
- 		if (isNaN(num)) return num;
- 		return (num > 0 ? "+" : num < 0 ? "–" : "") + Math.abs(num);
-	}
- 
-	function render(__str, __data) {
-		Object.keys(__data).forEach(function(key) {
-			__str = __str.replace("{"+key+"}", __data[key].toString());
-		});
-		return __str;
-	}
- 
-	function intersect(__ar1, __ar2) {
-		return __ar1.filter(function(item) {
-			return __ar2.indexOf(item) > -1;
-		});
-	}

//- mixin definitions

mixin print(__data)
	p!=JSON.stringify(__data)

//- create a standard menu link
mixin menuLink(__item, __data)
	- __data  = __data || {};
	- __title = render(__item.title, __data);
	- __url   = render(__item.url,   __data);
	li
		if Array.isArray(__item.sign)
			a(href=__url, title=__title)
				span.hidden-xs(class=__item.sign.join(" "))
				span.visible-xs=__title
		else
			a(href=__url)=__item.title

//- create a menu dropdown item
mixin menuDropdown(__item, __data)
	- __data  = __data || {};
	- __title = render(__item.title, __data);
	- __url   = __item.url ? render(__item.url,   __data) : null;
	li.dropdown
		a.dropdown-toggle(data-toggle="dropdown", href=__url)=__title
			b.caret
		ul.dropdown-menu
			each __link in __item.dropdown
				if __link.title
					+menuLink(__link, __data)
				else
					li.divider

doctype html
html(lang="de")
	head
		meta(charset="utf-8")
		title DCM – #{_Held.Person.Name}
		link(rel="stylesheet", href="//netdna.bootstrapcdn.com/bootswatch/3.1.1/spacelab/bootstrap.min.css")
		link(rel="stylesheet", href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css")
		link(rel="stylesheet", href="/dcm-display.css")
		script(src="//code.jquery.com/jquery.min.js")
		script(src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js")
		style.
			body {
				padding-top:      60px;
			}
			.dcm-col-divider {
				border-bottom:    1px solid silver;
			}
	body
		nav.navbar.navbar-default.navbar-fixed-top(role="navigation")
			.container-fluid
				.navbar-header
					button.navbar-toggle(type="button", data-toggle="collapse", data-target="#navbar-collapse-chars")
						span.sr-only Navigation
						span.icon-bar
						span.icon-bar
						span.icon-bar
					span.navbar-brand DCM
				#navbar-collapse-chars.collapse.navbar-collapse
					- var data = { id: _Held._id, name: _Held.Person.Name.split(" ")[0] }
					ul.nav.navbar-nav
						li
							a(href="/held/"+data.id) ► Heldenbogen
						if _Held.SF && contains(_Held.SF.geweiht, "Liturgiekenntnis")
							li
								a(href="/weihe/"+data.id) ► Liturgiebogen
						each __link in _Menu.left
							if Array.isArray(__link.dropdown)
								+menuDropdown(__link, data)
							else
								+menuLink(__link, data)
					ul.nav.navbar-nav.navbar-right
						each __link in _Menu.right
							if Array.isArray(__link.dropdown)
								+menuDropdown(__link, data)
							else
								+menuLink(__link, data)
		header.container
			.page-header.text-center
				h1(href="/held/"+_Held._id)=_Held.Person.Name
				h3 —Magiebogen—
		main.container
			// Vor- und Nachteile
			.row
				.col-sm-6
					section.panel.panel-default#vt
						.panel-heading.dcm-caption Vorteile
						ul.list-group
							each __vt in _Held.Vorteile
								li.list-group-item=__vt
				.col-sm-6
					section.panel.panel-default#nt
						.panel-heading.text-center.dcm-caption Nachteile
						ul.list-group
							each __nt in _Held.Nachteile
								li.list-group-item=__nt
			// Sonderfertigkeiten
			section.panel.panel-default#sf
				.panel-heading.dcm-caption Sonderfertigkeiten
				if _Held.SF
					.panel-body
						.container-fluid
							.text-center.dcm-header.dcm-list-item.dcm-border Karmale Sonderfertigkeiten
							.row
								each __sf in _Held.SF.geweiht
									.col-sm-6.col-lg-4
										.dcm-list-item=__sf
			// Attribute
			section.panel.panel-default#att
				.panel-heading.dcm-caption Attribute
				.panel-body.text-center
					.container-fluid
						.row.dcm-row
							each __att in ["MU", "KL", "IN", "CH", "FF", "GE", "KO", "KK"]
								.col-xs-6.col-sm-3
									.row
										.col-xs-6.dcm-header=__att
										.col-xs-6=_Held.Attribute[__att].wert
			// Basiswerte
			section.panel.panel-default#bas
				.panel-heading.dcm-caption Basiswerte
				.panel-body.text-center
					.container-fluid
						.row.dcm-row
							each __prop in ["LeP", "AuP", "MR", "KaP"]
								.col-xs-6.col-sm-3
									.row
										.col-xs-6.dcm-header=__prop
										.col-xs-6=_Held.Basiswerte[__prop] || "—"

			// maybe use Responsive Tables (Bootstrap) ??

			// Ritualkenntnis
			if _Held.Magie && Array.isArray(_Held.Magie.Ritualkenntnis) && _Held.Magie.Ritualkenntnis.length
				section.panel.panel-default#rkw
					.panel-heading.dcm-caption Ritualkenntnis
					.panel-body.text-center
						.container-fluid
							.row.dcm-row
								.col-xs-8.col-sm-3
									.dcm-header.dcm-border Ritualkenntnis
								.col-xs-4.col-sm-3
									.dcm-header.dcm-border Tradition
								.col-xs-6.col-sm-3
									.dcm-header.dcm-border Probe
								.col-xs-4.col-xs-offset-2.col-sm-2.col-sm-offset-1
									.dcm-header.dcm-border RkW
							each __rk, __idx in _Held.Magie.Ritualkenntnis
								case __rk.short
									when "Ztz"
										.row.dcm-row.dcm-table
											.col-xs-8.col-sm-3.text-left Zaubertänzer
											.col-xs-4.col-sm-3=__rk.long
											.col-xs-6.col-sm-3(title="sh. Ritual") &nbsp;
											.col-xs-2.col-sm-1=__rk.Lernstufe
											.col-xs-4.col-sm-2=__rk.RkW
									when "Shm"
										.row.dcm-row.dcm-table
											.col-xs-8.col-sm-3.text-left=__rk._talent.name
											.col-xs-4.col-sm-3=__rk.long
											.col-xs-6.col-sm-3(title=__rk._talent.probe.join(' · '))=__rk._talent.probe.map(function(item) { return _Held.Attribute[item].wert; }).join(' · ')
											.col-xs-2.col-sm-1=__rk.Lernstufe
											.col-xs-4.col-sm-2=__rk.RkW
									default
										.row.dcm-row.dcm-table
											.col-xs-8.col-sm-3.text-left=__rk.long
											.col-xs-4.col-sm-3 &nbsp;
											.col-xs-6.col-sm-3(title="sh. Ritual") &nbsp;
											.col-xs-2.col-sm-1=__rk.Lernstufe
											.col-xs-4.col-sm-2=__rk.RkW
			// Rituale
			if _Held.Magie && Array.isArray(_Held.Magie.Rituale) && _Held.Magie.Rituale.length
				- var __rks = _Held.Magie.Ritualkenntnis.map(function(item) { return item.short; });
				section.panel.panel-default#rit
					.panel-heading.dcm-caption Rituale
					.panel-body
						.container-fluid.text-center
							.row.dcm-row
								.col-xs-12.col-sm-8.col-md-3
									.dcm-header.dcm-border(style="line-height: 293%;") Ritual
								.col-xs-6.col-sm-4.col-md-2
									.row
										.col-xs-12
											.dcm-header.dcm-border Probe
									.row
										.col-xs-12
											.dcm-header.dcm-border Ritualkenntnis
								.col-xs-6.col-sm-4.col-md-3
									.row
										.col-xs-12
											.dcm-header.dcm-border Mod.
									.row
										.col-xs-12
											.dcm-header.dcm-border Merkmale
								.col-xs-6.col-sm-4.col-md-2
									.row
										.col-xs-12
											.dcm-header.dcm-border RD
									.row
										.col-xs-12
											.dcm-header.dcm-border WD
								.col-xs-6.col-sm-4.col-md-2
									.row
										.col-xs-12
											.dcm-header.dcm-border AsP
									.row
										.col-xs-12
											.dcm-header.dcm-border RW
						.container-fluid.text-center.dcm-hover
							each __rit in _Held.Magie.Rituale
								-	__rk  = intersect(__rks, __rit.Repräsentationen);
								-	__rkl = __rk.map(function(short) {
								-		return _Held.Magie.Ritualkenntnis.filter(function(obj) {
								-			return obj.short === short;
								-		})[0].long;
								-	});
								.row.dcm-row.dcm-table
									.col-xs-12.col-sm-8.col-md-3
										.text-left(style="line-height: 293%;")=__rit.Name
									.col-xs-6.col-sm-4.col-md-2
										.row.dcm-col-divider
											if intersect(__rks, ["Shm", "Elf"]).length
												.col-xs-12=__rit.Talent.join(', ')
											else if Array.isArray(__rit.Probe) && __rit.Probe.length > 0
												.col-xs-12(title=__rit.Probe.join(' · '))=__rit.Probe.map(function(item) { return Attribute[item] ? Attribute[item].wert : item; }).join(' · ')
											else
												.col-xs-12 &nbsp;
										.row
											.col-xs-12=__rkl.join(', ')
									.col-xs-6.col-sm-4.col-md-3
										.row.dcm-col-divider
											.col-xs-12=__rit.Modifikator || "\u00A0"
										.row
											.col-xs-12.text-left=__rit.Merkmale.join(', ') || "\u00A0"
									.col-xs-6.col-sm-4.col-md-2
										.row.dcm-col-divider
											.col-xs-12=__rit.cast.RD || "\u00A0"
										.row
											.col-xs-12=__rit.cast.WD || "\u00A0"
									.col-xs-6.col-sm-4.col-md-2
										.row.dcm-col-divider
											.col-xs-12=__rit.cast.AsP || "\u00A0"
										.row
											.col-xs-12=__rit.cast.RW || "\u00A0"




//-html(lang="de")
	head
		style.
			.meta td {
				background-color: #eee;
				color: gray;
				font-style: italic;
			}
			.zauber > tbody > tr:first-child > td {
				background-color: #ccc;
				height: 2em;
				cursor: pointer;
			}
			.zauber td:first-child {
				text-align: left;
			}
			.hide-rows tr {
				display: none;
			}
			.hide-rows tr:first-child {
				display: table-row;
			}
			.fett {
				font-weight: bold;
			}
	body
		section#spr
			if Array.isArray(Magie.Zauber) && Magie.Zauber.length > 0
				table.data-section.eigenschaften.mitte.zauber
					caption Zaubersprüche
					colgroup
						col
						col(style="width: 9em;")
						col(style="width: 4.5em;", span="2")
						col(style="width: 10em;", span="4")
					thead
						tr
							th Zauber
							th Probe
							th ZfW
							th Mod.
							th ZD
							th AsP
							th WD
							th RW
						tr
							th Spezialisierungen
							th(colspan="3") Spontane Mod.
							th Merkmale
							th Ziel
							th Repräsentation
							th Komplexität
					each __spell in Magie.Zauber
						tbody.hide-rows
							tr
								td.fett= __spell._zauber.Name
								td(title=__spell._zauber.Probe.join(' · '))= __spell._zauber.Probe.map(function(item) { return Attribute[item] ? Attribute[item].wert : item; }).join(' · ')
								td.fett= __spell.ZfW
								td= __spell._zauber.modifikation.typ
								td= __spell._zauber.cast.ZD
								td= __spell._zauber.cast.AsP
								td= __spell._zauber.cast.WD
								td= __spell._zauber.cast.RW
							tr.meta
								td
									if Array.isArray(__spell.Spezialisierung) && __spell.Spezialisierung.length > 0
										__spell.Spezialisierung.join(', ')
								td(colspan="3")= __spell._zauber.SpoMod.join(', ')
								td= __spell._zauber.Merkmale.join(', ')
								td= __spell._zauber.Ziel.join(', ')
								td= __spell.Repräsentation
								td= __spell._zauber.Komplexität + " (" + __spell.Lernstufe + ")"
							if Array.isArray(__spell._zauber.Varianten)
								each __variant in __spell._zauber.Varianten.filter(function(item) { return (item.Repräsentationen.indexOf(__spell.Repräsentation) > -1) })
									tr
										td="- "+__variant.Name
										td=__variant.modifikation.probe
										td
											if __variant.modifikation.minZfW
												| (#{__variant.modifikation.minZfW})
										td=__variant.modifikation.typ
										td= __variant.cast.ZD
										td= __variant.cast.AsP
										td= __variant.cast.WD
										td= __variant.cast.RW
				script.
					$('.zauber').on('click', 'tbody', function(evt) {
						$(this).toggleClass('hide-rows');
					});
		section#rit
			if Array.isArray(Magie.Ritualkenntnis) && Magie.Ritualkenntnis.length > 0
				table.data-section.eigenschaften.mitte
					caption Ritualkenntnis
					colgroup
						col
						col
						col(style="width: 10em;")
						col(style="width: 5em;")
						col(style="width: 10em;")
					thead
						tr
							th Ritualkenntnis
							th Tradition
							th Probe
							th 
							th RkW
					tbody
						each __rk, __idx in Magie.Ritualkenntnis
							case __rk.short
								when "Ztz"
									tr
										td.links Zaubertänzer
										td=__rk.long
										td(title="sh. Ritual")
										td=__rk.Lernstufe
										td=__rk.RkW
								when "Shm"
									tr
										td.links=__rk._talent.name
										td=__rk.long
										td(title=__rk._talent.probe.join(' · '))=__rk._talent.probe.map(function(item) { return Attribute[item].wert; }).join(' · ')
										td=__rk.Lernstufe
										td=__rk.RkW
								default
									tr
										td.links=__rk.long
										td
										td(title="sh. Ritual")
										td=__rk.Lernstufe
										td=__rk.RkW
			if Array.isArray(Magie.Rituale) && Magie.Rituale.length > 0
				- var __rks = Magie.Ritualkenntnis.map(function(item) { return item.short; });
				table.data-section.eigenschaften.mitte
					caption Rituale
					colgroup
						col(style="width: 30%;")
						col
					thead
						tr
							th(rowspan="2", style="vertical-align: middle;") Ritual
							th Probe
							th Mod.
							th RD
							th AsP
						tr
							th Ritualkenntnis
							th Merkmale
							th WD
							th RW
					tbody
						each __rit in Magie.Rituale
							-	__rk  = intersect(__rks, __rit.Repräsentationen);
							-	__rkl = __rk.map(function(short) {
							-		return Magie.Ritualkenntnis.filter(function(obj) {
							-			return obj.short === short;
							-		})[0].long;
							-	});
							tr
								td.links(rowspan="2")=__rit.Name
								td
									if intersect(__rks, ["Shm", "Elf"]).length
										div=__rit.Talent.join(', ')
									if Array.isArray(__rit.Probe) && __rit.Probe.length > 0
										div(title=__rit.Probe.join(' · '))=__rit.Probe.map(function(item) { return Attribute[item] ? Attribute[item].wert : item; }).join(' · ')
								td=__rit.Modifikator
								td=__rit.cast.RD
								td=__rit.cast.AsP
							tr
								td=__rkl.join(', ')
								td.links=__rit.Merkmale.join(', ')
								td=__rit.cast.WD
								td=__rit.cast.RW