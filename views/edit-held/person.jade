//- function definitions

-	function contains(__array, __string) {
-		if (typeof __array === "string") {
-			return __array.indexOf(__string) > -1;
-		}
-		if (Array.isArray(__array)) {
-			return __array.filter(function(item) {
-				return item.indexOf(__string) > -1;
-			}).length > 0;
-		}
-		return false;
-	}
-	function render(__str, __data) {
-		Object.keys(__data).forEach(function(key) {
-			__str = __str.replace("{"+key+"}", __data[key].toString());
-		});
-		return __str;
-	}

//- create a standard menu link
mixin menuLink(__item, __data)
	-     __data  = __data || {};
	- var __title = render(__item.title, __data);
	- var __url   = __item.url ? render(__item.url, __data) : null;
	- var __curr  = __url === _Menu.currentURL;
	-     __url   = __curr ? null : __url;
	if Array.isArray(__item.dropdown)
		+menuDropdown(__item, __data)
	else
		li(class=__curr ? "active" : null)
			if Array.isArray(__item.sign)
				a(href=__url, title=__title)
					span.hidden-xs(class=__item.sign.join(" "))
					span.visible-xs!=__title
			else
				a(href=__url)!=__title

//- create a menu dropdown item
mixin menuDropdown(__item, __data)
	- __data  = __data || {};
	li.dropdown
		a.dropdown-toggle(data-toggle="dropdown")!=render(__item.title, __data)
			b.caret
		ul.dropdown-menu
			each __link in __item.dropdown
				if __link.title
					+menuLink(__link, __data)
				else
					li.divider


doctype html
html(lang="de")
	head
		meta(charset="utf-8")
		title #{_Held.Person.Name.split(' ')[0]} bearbeiten – Beschreibung
		link(rel="stylesheet", href="//netdna.bootstrapcdn.com/bootswatch/3.1.1/spacelab/bootstrap.min.css")
		link(rel="stylesheet", href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css")
		link(rel="stylesheet", href="/dcm-display.css")
		script(src="//code.jquery.com/jquery-2.1.0.min.js")
		script(src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js")
		style.
			body {
				padding-top:      60px;
			}
	body#top
		nav.navbar.navbar-default.navbar-fixed-top(role="navigation")
			.container-fluid
				.navbar-header
					button.navbar-toggle(type="button", data-toggle="collapse", data-target="#navbar-collapse-chars")
						span.sr-only Navigation
						span.icon-bar
						span.icon-bar
						span.icon-bar
					span.navbar-brand DCM
				#navbar-collapse-chars.collapse.navbar-collapse
					ul.nav.navbar-nav
						li
							a(href="/held/"+_Held._id) ► Heldenbogen
						if _Held.SF && (contains(_Held.SF.magisch, "Ritualkenntnis") || contains(_Held.SF.magisch, "Repräsentation"))
							li
								a(href="/magie/"+_Held._id) ► Magiebogen
						if _Held.SF && contains(_Held.SF.geweiht, "Liturgiekenntnis")
							li
								a(href="/weihe/"+_Held._id) ► Liturgiebogen
						li
							a(href="/helden") Meine Helden
					ul.nav.navbar-nav.navbar-right
						- var data = { id: _Held._id, name: _Held.Person.Name.split(" ")[0] }
						each __link in _Menu.right
							+menuLink(__link, data)
		header.container
			.page-header.text-center
				h1=_Held.Person.Name
		main.container
			form.form-horizontal(action="/person/"+_Held._id, method="post", accept-charset="utf-8")#newChar
				input(type="hidden", name="_method", value="put")
				// Beschreibung
				section.panel.panel-default#bes
					.panel-heading.dcm-caption Beschreibung
					.panel-body
						.container-fluid
							.form-group
								label.control-label.col-sm-2(for="char-name") Name:
								.col-sm-9
									input.form-control#char-name(name="Person[Name]", type="text", placeholder="Name", value=_Held.Person.Name)
							.form-group
								label.control-label.col-sm-2(for="char-titel") Titel:
								.col-sm-9
									input.form-control#char-titel(name="Person[Titel]", type="text", placeholder="Titel", value=_Held.Person.Titel)
							.form-group
								label.control-label.col-sm-2(for="char-gender") Geschlecht:
								.col-sm-3
									select#char-gender.form-control
										each __val in ["männlich", "weiblich"]
											option(selected=(__val === _Held.Person.Geschlecht), value=__val)=__val
							.form-group
								label.control-label.col-sm-2(for="char-so") Sozialstatus:
								.col-sm-2
									input.form-control.text-center#char-so(name="Person[SO]", type="number", min="0", max="20", step="1" placeholder="SO", value=_Held.Person.SO)
							.form-group
								label.control-label.col-sm-2(for="char-height") Größe:
								.col-sm-2
									input.form-control.text-center#char-height(name="Person[Größe]", type="number", min="25", max="250", step="1", placeholder="cm", value=_Held.Person.Größe)
								.col-sm-8.form-control-static Halbfinger
							.form-group
								label.control-label.col-sm-2(for="char-weight") Gewicht:
								.col-sm-2
									input.form-control.text-center#char-weight(name="Person[Gewicht]", type="number", min="20", max="300", step="1", placeholder="kg", value=_Held.Person.Gewicht)
								.col-sm-8.form-control-static Stein
							.form-group
								label.control-label.col-sm-2(for="char-age") Alter:
								.col-sm-2
									input.form-control.text-center#char-age(name="Person[Alter]", type="number", min="10", step="1" placeholder="Jahre", value=_Held.Person.Alter)
							.form-group
								label.control-label.col-sm-2 Tsatag:
								.col-sm-2
									label.sr-only(for="tt-tag") Tsatag (Tag)
									select.form-control#tt-tag(name="Person[Tsatag][tag]")
										- for (var day = 1; day < 31; day++)
											option(selected=(day == _Held.Person.Tsatag.tag), value=day)=day
								.col-sm-2
									label.sr-only(for="tt-mon") Tsatag (Monat)
									select.form-control#tt-mon(name="Person[Tsatag][monat]")
										each month, index in ["PRA", "RON", "EFF", "TRA", "BOR", "HES", "FIR", "TSA", "PHE", "PER", "ING", "RAH"]
											option(selected=(index == _Held.Person.Tsatag.monat), value=index)=month
										option(selected=(12 == _Held.Person.Tsatag.monat), value=12, title="Namenlose Tage") (NLT)
								.col-sm-2
									label.sr-only(for="tt-jahr") Tsatag (Jahr)
									input.form-control.text-center#tt-jahr(name="Person[Tsatag][jahr]", type="number", step="1", value=_Held.Person.Tsatag.jahr)
								.col-sm-2.form-control-static BF 
							.form-group
								label.control-label.col-sm-2(for="char-haare") Haarfarbe:
								.col-sm-4
									input.form-control#char-haare(name="Person[Haarfarbe]", type="text", placeholder="Haarfarbe", value=_Held.Person.Haarfarbe)
							.form-group
								label.control-label.col-sm-2(for="char-augen") Augenfarbe:
								.col-sm-4
									input.form-control#char-augen(name="Person[Augenfarbe]", type="text", placeholder="Augenfarbe", value=_Held.Person.Augenfarbe)
							.form-group
								label.control-label.col-sm-2(for="char-look") Aussehen:
								.col-sm-9
									textarea.form-control#char-look(name="Person[Aussehen]", rows="5", placeholder="Aussehen")=_Held.Person.Aussehen
							.form-group
								label.control-label.col-sm-2(for="char-story") Hintergrund:
								.col-sm-9
									textarea.form-control#char-story(name="Person[Hintergrund]", rows="5", placeholder="Hintergrund")=_Held.Person.Hintergrund
				.well.text-center#save
					.row.dcm-row
						.col-sm-4.col-sm-offset-1
							button.form-control.btn.btn-success(type="submit") speichern
						.col-sm-4.col-sm-offset-2
							a.form-control.btn.btn-warning(href="/held/"+_Held._id) zurück
