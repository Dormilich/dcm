- function getTalent(_charlist, _stdTalent) { 
- 	var l = _charlist ? _charlist.length : 0; 
- 	while (l--) { 
- 		if (_charlist[l].name === _stdTalent.name) {
- 			return _charlist[l];
- 		}
- 	} 
- 	return { wert: 0, AT: 0, PA: 0 }; 
- }
- 
- function isAvailable(_charlist, _stdTalent) { 
- 	var l = _charlist ? _charlist.length : 0; 
- 	if (_stdTalent.standard) {
- 		return true;
- 	}
- 	while (l--) { 
- 		if (_charlist[l].name === _stdTalent.name) {
- 			return true; 
- 		}
- 	} 
- 	return false; 
- }

mixin talenttable(_titel_, _data_, _name_, _held_)
	table.data-section.eigenschaften
		caption= _titel_
		colgroup
			col(style="width: 2em;")
			col(style="width: 25%;")
			col
			col(style="width: 7em;")
			col(style="width: 7em;")
		thead
			tr
				td
				th Talent
				th Spezialisierung
				th Lern
				th TaW
		tbody
			each __stdTalent, key in _data_
				- var __heldentalent = getTalent(_held_, __stdTalent)
				- var __isAvailable  = isAvailable(_held_, __stdTalent)
				unless Array.isArray(__stdTalent.spezialisierungen)
					- __stdTalent.spezialisierungen = [__stdTalent.spezialisierungen]
				tr(data-options=__stdTalent.spezialisierungen.join(','), data-name="Talente[#{_name_}][#{key}][Spezialisierung]")
					td.mitte(style="padding: 0.2em;")
						input.unlock(type="hidden", name="Talente[#{_name_}][#{key}][_talent]", value=__stdTalent._id, disabled=!__isAvailable)
						if __stdTalent.standard
							input(type="hidden", name="Talente[#{_name_}][#{key}][name]", value=__stdTalent.name)
						else
							input.isactive(type="checkbox", name="Talente[#{_name_}][#{key}][name]", value=__stdTalent.name, id=_name_+key, checked=__isAvailable)
					td
						label(for=_name_+key)= __stdTalent.name
					td
						if __heldentalent.Spezialisierung && Array.isArray(__heldentalent.Spezialisierung)
							each spez in __heldentalent.Spezialisierung
								.wrapper
									button.del(type="button")= "\u2717"
									input.spez(type="text", name="Talente[#{_name_}][#{key}][Spezialisierung]", value=spez)
						button.add(type="button") +
					td.mitte
						select.unlock(size="1", name="Talente[#{_name_}][#{key}][Lernstufe]", disabled=!__isAvailable)
							each kat in ["A+", "A", "B", "C", "D", "E", "F", "G", "H"]
								option(selected=__isAvailable ? __heldentalent.Lernstufe === kat : __stdTalent.stufe === kat)= kat
					td.mitte
						input.unlock(type="number", name="Talente[#{_name_}][#{key}][wert]", min="-3", max="35", step="1", value=__heldentalent.wert, disabled=!__isAvailable)

mixin languagetable(_data_, _name_, _held_)
	table.data-section.eigenschaften
		caption= _name_
		colgroup
			col(style="width: 2em;")
			col
			col(style="width: 7em;")
			col(style="width: 7em;")
			col(style="width: 7em;")
		thead
			tr
				td
				th Talent
				th Kompl.
				th Lern
				th TaW
		tbody
			each __stdTalent, key in _data_
				- var __heldentalent = getTalent(_held_, __stdTalent)
				- var __isAvailable  = isAvailable(_held_, __stdTalent)
				tr
					td.mitte(style="padding: 0.2em;")
						input.unlock(type="hidden", name="Talente[#{_name_}][#{key}][Komplexität]", value=__stdTalent.komplexität, disabled=!__isAvailable)
						if __stdTalent.standard
							input(type="hidden", name="Talente[#{_name_}][#{key}][name]", value=__stdTalent.name)
						else
							input.isactive(type="checkbox", name="Talente[#{_name_}][#{key}][name]", value=__stdTalent.name, id=_name_+key, checked=__isAvailable)
					td
						label(for=_name_+key)= __stdTalent.name
					td.mitte= __stdTalent.komplexität
					td.mitte
						select.unlock(size="1", name="Talente[#{_name_}][#{key}][Lernstufe]", disabled=!__isAvailable)
							each kat in ["A+", "A", "B", "C", "D", "E", "F", "G", "H"]
								option(selected=__isAvailable ? __heldentalent.Lernstufe === kat : __stdTalent.stufe === kat)= kat
					td.mitte
						input.unlock(type="number", name="Talente[#{_name_}][#{key}][wert]", min="-3", max=__stdTalent.komplexität, step="1", value=__heldentalent.wert, disabled=!__isAvailable)

mixin liturgietable(_data_, _held_)
	table.data-section.eigenschaften
		caption Liturgiekenntnis
		colgroup
			col(style="width: 2em;")
			col
			col(style="width: 7em;")
			col(style="width: 7em;")
		thead
			tr
				td
				th Gottheit
				th Lern
				th TaW
		tbody
			each __stdTalent, key in _data_
				- var __heldentalent = getTalent(_held_, __stdTalent)
				- var __isAvailable  = isAvailable(_held_, __stdTalent)
				tr
					td.mitte(style="padding: 0.2em;")
						input.unlock(type="hidden", name="Weihe.Liturgiekenntnis[#{key}][_talent]", value=__stdTalent._id, disabled=!__isAvailable)
						input.isactive(type="checkbox", name="Weihe.Liturgiekenntnis[#{key}][name]", value=__stdTalent.name, id=lk+key, checked=__isAvailable)
					td
						label(for=lk+key)= __stdTalent.name
					td.mitte
						select.unlock(size="1", name="Weihe.Liturgiekenntnis[#{key}][Lernstufe]", disabled=!__isAvailable)
							each kat in ["A+", "A", "B", "C", "D", "E", "F", "G", "H"]
								option(selected=__isAvailable ? __heldentalent.Lernstufe === kat : __stdTalent.stufe === kat)= kat
					td.mitte
						input.unlock(type="number", name="Weihe.Liturgiekenntnis[#{key}][wert]", min="3", max="35", step="1", value=__heldentalent.wert, disabled=!__isAvailable)

doctype 5
html(lang="de")
	head
		title Talentwerte bearbeiten
		link(rel="stylesheet", type="text/css", href="/show.css")
		link(rel="stylesheet", type="text/css", href="/dropout.css")
		script(src="/jquery-2.0.3.min.js")
		style.
			input[type="number"], .nk-taw {
				text-align: center;
			}
			nav {
				position: fixed;
				top: 0;
				background-color: #eee;
				width: 100%;
			}
			nav a {
				display: inline-block;
				width: 12em;
				text-decoration: none;
				color: black;
				text-align: center;
				background-color: #eee;
				padding: 0.3em 0.5em;
				font-weight: bold;
			}
			nav a:hover {
				color: #eee;
				background-color: black;
			}
			h1 a {
				text-decoration: none;
				color: inherit;
			}
			main {
				margin-top: 5em;
			}
	body
		header
			nav
				a(href="#jNK") Nahkampf
				a(href="#jFK") Fernkampf
				a(href="#jKOR") Körper
				a(href="#jGES") Gesellschaft
				a(href="#jNAT") Natur
				a(href="#jWIS") Wissen
				a(href="#jHWK") Handwerk
				a(href="#jSPR") Sprachen
				a(href="#jSCR") Schriften
				a(href="#jGAB") Gaben
				a(href="#jLKW") Liturgiekenntnis
				a(href="#save") [speichern]
		main
			h1.mitte
				a(href="/held/"+_chardata._id)= _chardata.Person.Name
			form(action="/taw/"+_chardata._id, method="post", accept-charset="utf-8")
				input(type="hidden", name="_method", value="put")
			
				a#jNK
				table.data-section.eigenschaften
					caption Nahkampf
					colgroup
						col(style="width: 2em;")
						col(style="width: 25%;")
						col
						col(style="width: 7em;")
						col(style="width: 7em;")
						col(style="width: 7em;")
						col(style="width: 7em;")
					thead
						tr
							td
							th Talent
							th Spezialisierung
							th Lern
							th AT-Mod.
							th PA-Mod.
							th TaW
					tbody#nahkampf
						each __stdTalent, key in Nahkampf
							- var __heldentalent = getTalent(_chardata.Talente.Nahkampf, __stdTalent)
							- var __isAvailable  = isAvailable(_chardata.Talente.Nahkampf, __stdTalent)
							unless Array.isArray(__stdTalent.spezialisierungen)
								- __stdTalent.spezialisierungen = [__stdTalent.spezialisierungen]
							tr(data-name="Talente[Nahkampf][#{key}][Spezialisierung]", data-options=__stdTalent.spezialisierungen.join(','))
								td.mitte(style="padding: 0.2em;")
									input.unlock(type="hidden", name="Talente[Nahkampf][#{key}][_talent]", value=__stdTalent._id, disabled=!__isAvailable)
									if __stdTalent.standard
										input(type="hidden", name="Talente[Nahkampf][#{key}][name]", value=__stdTalent.name)
									else
										input.isactive(type="checkbox", name="Talente[Nahkampf][#{key}][name]", value=__stdTalent.name, id="nk"+key, checked=__isAvailable)
								td
									label(for="nk"+key)= __stdTalent.name
								td
									if __heldentalent.Spezialisierung && Array.isArray(__heldentalent.Spezialisierung)
										each spez in __heldentalent.Spezialisierung
											.wrapper
												button.del(type="button")= "\u2717"
												input.spez(type="text", name="Talente[Nahkampf][#{key}][Spezialisierung]", value=spez)
									button.add(type="button") +
								td.mitte
									select.unlock(size="1", name="Talente[Nahkampf][#{key}][Lernstufe]", disabled=!__isAvailable)
										each kat in ["A+", "A", "B", "C", "D", "E", "F", "G", "H"]
											option(selected=__isAvailable ? __heldentalent.Lernstufe === kat : __stdTalent.stufe === kat)= kat
								td.mitte
									input.nk-at.unlock(type="number", name="Talente[Nahkampf][#{key}][AT]", min="0", max="20", step="1", value=__heldentalent.AT, disabled=!__isAvailable)
								td.mitte
									input.nk-pa.unlock(type="number", name="Talente[Nahkampf][#{key}][PA]", min="0", max="20", step="1", value=__heldentalent.PA, disabled=!__isAvailable)
								td.mitte
									input.nk-taw(type="text", size="3", readonly)

				a#jFK
				table.data-section.eigenschaften
					caption Fernkampf
					colgroup
						col(style="width: 2em;")
						col(style="width: 25%;")
						col
						col(style="width: 7em;")
						col(style="width: 7em;")
					thead
						tr
							td
							th Talent
							th Spezialisierung
							th Lern
							th TaW
					tbody
						each __stdTalent, key in Fernkampf
							- var __heldentalent = getTalent(_chardata.Talente.Fernkampf, __stdTalent)
							- var __isAvailable  = isAvailable(_chardata.Talente.Fernkampf, __stdTalent)
							unless Array.isArray(__stdTalent.spezialisierungen)
								- __stdTalent.spezialisierungen = [__stdTalent.spezialisierungen]
							tr(data-name="Talente[Fernkampf][#{key}][Spezialisierung]", data-options=__stdTalent.spezialisierungen.join(','))
								td.mitte(style="padding: 0.2em;")
									input.unlock(type="hidden", name="Talente[Fernkampf][#{key}][_talent]", value=__stdTalent._id, disabled=!__isAvailable)
									if __stdTalent.standard
										input(type="hidden", name="Talente[Fernkampf][#{key}][name]", value=__stdTalent.name)
									else
										input.isactive(type="checkbox", name="Talente[Fernkampf][#{key}][name]", value=__stdTalent.name, id="fk"+key, checked=__isAvailable)
								td
									label(for="fk"+key)= __stdTalent.name
								td
									if Array.isArray(__heldentalent.Spezialisierung)
										each spez in __heldentalent.Spezialisierung
											.wrapper
												button.del(type="button")= "\u2717"
												input.spez(type="text", name="Talente[Fernkampf][#{key}][Spezialisierung]", value=spez)
									button.add(type="button") +
								td.mitte
									select.unlock(size="1", name="Talente[Fernkampf][#{key}][Lernstufe]", disabled=!__isAvailable)
										each kat in ["A+", "A", "B", "C", "D", "E", "F", "G", "H"]
											option(selected=__isAvailable ? __heldentalent.Lernstufe === kat : __stdTalent.stufe === kat)= kat
								td.mitte
									input.unlock(type="number", name="Talente[Fernkampf][#{key}][AT]", min="0", max="20", step="1", value=__heldentalent.AT, disabled=!__isAvailable)
				a#jKOR
				+talenttable('Körperliche Talente', körperlich, 'körperlich', _chardata.Talente.körperlich)
				a#jGES
				+talenttable('Gesellschaftliche Talente', Gesellschaft, 'Gesellschaft', _chardata.Talente.Gesellschaft)
				a#jNAT
				+talenttable('Naturtalente', Natur, 'Natur', _chardata.Talente.Natur)
				a#jWIS
				+talenttable('Wissenstalente', Wissen, 'Wissen', _chardata.Talente.Wissen)
				a#jHWK
				+talenttable('Handwerkstalente', Handwerk, 'Handwerk', _chardata.Talente.Handwerk)
				a#jSPR
				+languagetable(Sprachen, 'Sprachen', _chardata.Talente.Sprachen)
				a#jSCR
				+languagetable(Schriften, 'Schriften', _chardata.Talente.Schriften)
				a#jGAB
				+talenttable('Gaben', Gaben, 'Gaben', _chardata.Talente.Gaben)
				a#jLKW
				+liturgietable(Liturgiekenntnis, 'Liturgiekenntnis', _chardata.Talente.Liturgiekenntnis)
				
				.mitte#save
					button(type="submit") speichern

		script.
			$('label').on('click', function() {
				// click is faster than label => checkbox
				var $tr    = $(this).closest('tr');
				var $check = $tr.find('.isactive');
				if ($check.length) {
					$tr.find('.unlock').prop('disabled', $check.prop('checked'));
					$tr.find('.spez').prop('disabled', true);
				}
			});
			$('#nahkampf').on('change', 'tr', function() {
				var taw = Number($(this).find('.nk-at').val()) + Number($(this).find('.nk-pa').val());
				$(this).find('.nk-taw').val(taw);
			});
			$(function() {
				$('#nahkampf tr').each(function() {
					var taw = Number($(this).find('.nk-at').val()) + Number($(this).find('.nk-pa').val());
					$(this).find('.nk-taw').val(taw);
				});
			});
			$('.add').on('click', function() {
				var $datasrc = $(this).closest('tr');
				var options  = $datasrc.data('options');
				var $wrapper = $('<div/>').addClass('wrapper');
				var $text = $('<input type="text"/>').prop('name', $datasrc.data('name'));
				var $rem  = $('<button type="button"/>')
					.text("\u2717")
					.addClass('del')
					.on('click', function() {
						$wrapper.remove();
					})
				;
				if (options && options.length) {
					var $ul   = $('<ul/>').addClass('options');
					var $down = $('<button type="button">▼</button>');
					options.split(',').forEach(function(item) {
						$('<li/>').text(item).appendTo($ul);
					});
					$down.on('click', function() {
						$ul.toggle();
					});    
					$ul.on('click', 'li', function() {
						$text.val(this.textContent);
						$ul.hide();
					});
					$wrapper.append($rem, $ul, $text, $down);
					$wrapper.insertBefore(this);
					var style   = $text.offset();
					style.top  += $text.outerHeight();
					style.width = $text.outerWidth() - 2;
					$ul.css(style);
				}
				else {
					$wrapper.append($rem, $text);
					$wrapper.insertBefore(this);
				}
			});
			$('.del').on('click', function() {
				$(this.parentNode).remove();
			});
